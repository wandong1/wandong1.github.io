<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>helm on 万东的云计算运维博客</title>
    <link>https://wandong1.github.io/tags/helm/</link>
    <description>Recent content in helm on 万东的云计算运维博客</description>
    <image>
      <url>https://wandong1.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wandong1.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 14 Sep 2022 16:14:24 +0000</lastBuildDate><atom:link href="https://wandong1.github.io/tags/helm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>helm的使用方法介绍</title>
      <link>https://wandong1.github.io/post/helm%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 14 Sep 2022 16:14:24 +0000</pubDate>
      
      <guid>https://wandong1.github.io/post/helm%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>Helm Helm是一个Kubernetes的包管理工具，就像Linux下的包管理器，如yum/apt等，可以很方便的将之前
打包好的yaml文件部署到kubernetes上。
Helm有3个重要概念：
• **helm：**一个命令行客户端工具，主要用于Kubernetes应用chart的创建、打包、发布和管理。
• **Chart：**应用描述，一系列用于描述 k8s 资源相关文件的集合。
• **Release：**基于Chart的部署实体，一个 chart 被 Helm 运行后将会生成对应的一个 release；将在
k8s中创建出真实运行的资源对象。
Helm客户端 使用helm很简单，你只需要下载一个二进制客户端包即可，会通过kubeconfig配置（通常$HOME/.kube/config）来连接Kubernetes。
项目地址：https://github.com/helm/helm
下载Helm客户端：
wget https://get.helm.sh/helm-v3.4.2-linux-amd64.tar.gz tar zxvf helm-v3.4.2-linux-amd64.tar.gz mv linux-amd64/helm /usr/bin/ Helm常用命令 Helm管理应用生命周期： • helm create 创建Chart示例
• helm install 部署
• helm upgrade 更新
• helm rollback 回滚
• helm uninstall 卸载
Helm基本使用：创建Chart示例 创建chart：
# 默认示例中部署的是一个nginx服务 helm create mychart 打包chart：
helm package mychart • charts：目录里存放这个chart依赖的所有子chart。
• Chart.yaml：用于描述这个 Chart的基本信息，包括名字、描述信息以及版本等。
• values.yaml ：用于存储 templates 目录中模板文件中用到变量的值。</description>
    </item>
    
  </channel>
</rss>
